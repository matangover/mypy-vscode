{
    "name": "mypy",
    "displayName": "Mypy",
    "description": "Type checking for Python using mypy",
    "author": "Matan Gover",
    "repository": {
        "type": "git",
        "url": "https://github.com/matangover/mypy-vscode"
    },
    "license": "MIT",
    "version": "0.4.2",
    "publisher": "matangover",
    "icon": "mypy.png",
    "engines": {
        "vscode": "^1.70.0"
    },
    "categories": [
        "Programming Languages",
        "Linters",
        "Other"
    ],
    "activationEvents": [
        "onLanguage:python",
        "workspaceContains:**/*.py"
    ],
    "contributes": {
        "configuration": {
            "title": "Mypy",
            "type": "object",
            "properties": {
                "mypy.enabled": {
                    "type": "boolean",
                    "default": true,
                    "scope": "resource",
                    "description": "Enable or disable Mypy checking. For example, you can disable Mypy for a specific workspace or folder."
                },
                "mypy.executable": {
                    "type": "string",
                    "default": "",
                    "scope": "resource",
                    "description": "(Deprecated and unused) Path to mypyls executable",
                    "deprecationMessage": "The mypyls executable is no longer used. Use mypy.dmypyExecutable instead to point to the dmypy executable.",
                    "markdownDeprecationMessage": "The mypyls executable is no longer used. Use `#mypy.dmypyExecutable#` instead to point to the dmypy executable."
                },
                "mypy.dmypyExecutable": {
                    "type": "string",
                    "default": "dmypy",
                    "scope": "resource",
                    "markdownDescription": "Path to `dmypy` (the mypy daemon). Either a full path or just a name (which must exist in your PATH). You can use substitutions: `${workspaceFolder}` and `~` (home directory)."
                },
                "mypy.runUsingActiveInterpreter": {
                    "type": "boolean",
                    "default": false,
                    "scope": "resource",
                    "markdownDescription": "Use the active Python interpreter (selected in the Python extension) to run dmypy itself, instead of the `mypy.dmypyExecutable` setting. Note: your code is always checked against the active interpreter â€“ this setting only controls the interpreter used to run dmypy itself."
                },
                "mypy.configFile": {
                    "type": "string",
                    "default": "",
                    "scope": "resource",
                    "markdownDescription": "Mypy config file, relative to the workspace folder. If empty, search in the default locations. See https://mypy.readthedocs.io/en/latest/config_file.html."
                },
                "mypy.targets": {
                    "type": "array",
                    "default": [
                        "."
                    ],
                    "scope": "resource",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "description": "List of paths to analyze, relative to the workspace folder. By default, check the entire workspace folder."
                },
                "mypy.roots": {
                    "type": "array",
                    "default": [],
                    "scope": "resource",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "description": "List of paths to consider as roots, relative to the workspace folder. Each root is checked by its own mypy daemon. If not set, use the workspace folders. This is useful for monorepos when not in a normal multi-root workspace. This setting is ignored in multi-root workspaces."
                },
                "mypy.checkNotebooks": {
                    "type": "boolean",
                    "default": false,
                    "scope": "resource",
                    "markdownDescription": "Check Python code in Jupyter notebooks."
                },
                "mypy.mypyExecutable": {
                    "type": "string",
                    "default": "mypy",
                    "scope": "resource",
                    "markdownDescription": "Path to `mypy` (the mypy executable). Used only for checking Jupyter notebooks. You can use the same substitutions as in the `dmypyExecutable` setting."
                },
                "mypy.debugLogging": {
                    "type": "boolean",
                    "default": false,
                    "scope": "window",
                    "markdownDescription": "Enable debug logging for the extension. (Reload the window after changing this setting.)"
                },
                "mypy.extraArguments": {
                    "type": "array",
                    "default": [],
                    "scope": "resource",
                    "items": {
                        "type": "string"
                    },
                    "markdownDescription": "A list of extra command-line arguments to append to the `dmypy run` command. Add each argument as a separate item. For a list of options, see [mypy's documentation](https://mypy.readthedocs.io/en/stable/command_line.html)."
                },
                "mypy.env": {
                    "type": "object",
                    "default": {},
                    "scope": "resource",
                    "markdownDescription": "Environment variables to set when running mypy.",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "mypy.envFile": {
                    "type": "string",
                    "default": "",
                    "scope": "resource",
                    "markdownDescription": "Path to an env file (relative to the workspace folder) containing environment variables to set when running mypy. Used in addition to the `env` setting. Ignored if the file doesn't exist."
                },
                "mypy.statusFile": {
                    "type": "string",
                    "default": "",
                    "scope": "resource",
                    "markdownDescription": "Path to status file used by dmypy, relative to the workspace folder. By default, the status file is stored in a temporary location. Specify a name such as `.dmypy.json` to use a fixed location for the status file, so that you can reuse the daemon outside of VS Code. Reusing the daemon might cause issues, but can be useful for large codebases."
                }
            }
        },
        "commands": [
            {
                "command": "mypy.recheckWorkspace",
                "title": "Mypy: Recheck Workspace"
            },
            {
                "command": "mypy.restartAndRecheckWorkspace",
                "title": "Mypy: Restart Daemon and Recheck Workspace"
            }
        ],
        "menus": {
            "commandPalette": [
                {
                    "command": "mypy.recheckWorkspace",
                    "when": "mypy.activated"
                },
                {
                    "command": "mypy.restartAndRecheckWorkspace",
                    "when": "mypy.activated"
                }
            ]
        }
    },
    "main": "./out/extension.js",
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "test": "npm run compile && mocha out/mypy.test.js"
    },
    "devDependencies": {
        "@types/async-lock": "^1.1.2",
        "@types/child-process-promise": "^2.2.1",
        "@types/mocha": "^9.0.0",
        "@types/node": "^12.11.7",
        "@types/promise.allsettled": "^1.0.3",
        "@types/vscode": "^1.70.0",
        "mocha": "^9.1.2",
        "typescript": "^4.0.2"
    },
    "dependencies": {
        "async-lock": "^1.2.8",
        "child-process-promise": "^2.2.1",
        "envfile": "^7.1.0",
        "lookpath": "^1.2.0",
        "promise.allsettled": "^1.0.4",
        "shlex": "^2.0.2",
        "untildify": "^4.0.0"
    }
}